{"version":3,"sources":["components/Order/Order.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","react_default","a","createElement","key","style","textTransform","display","margin","border","padding","className","classes","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","Order_Order","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,yJCiCHC,EA9BD,SAACC,GACd,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAChCA,EAAYE,KAAK,CAChBC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAI5B,IAAMI,EAAmBL,EAAYM,IAAI,SAAAC,GACxC,OAAOC,EAAAC,EAAAC,cAAA,QACNC,IAAKJ,EAAGJ,KACRS,MAAO,CACNC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,QACNV,EAAGJ,KARD,OAQWI,EAAGH,OARd,OAWR,OACCI,EAAAC,EAAAC,cAAA,OAAKQ,UAAWC,IAAQtB,OACvBW,EAAAC,EAAAC,cAAA,0BAAkBL,GAClBG,EAAAC,EAAAC,cAAA,oBAAWF,EAAAC,EAAAC,cAAA,uBAAeX,EAAMqB,OAAOC,QAAQ,+BCpB5CC,8LAEJC,KAAKxB,MAAMyB,cAAcD,KAAKxB,MAAM0B,MAAOF,KAAKxB,MAAM2B,yCAItD,IAAIC,EAASnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,MAWb,OAVKL,KAAKxB,MAAM8B,UACfF,EACCJ,KAAKxB,MAAM4B,OAAOrB,IAAI,SAAAR,GAAK,OAC1BU,EAAAC,EAAAC,cAACoB,EAAD,CACCnB,IAAKb,EAAMiC,GACX/B,YAAaF,EAAME,YACnBoB,MAAOtB,EAAMsB,WAKhBZ,EAAAC,EAAAC,cAAA,WACEiB,UAnBgBK,aAwCNC,sBAfS,SAAAC,GACvB,MAAO,CACNP,OAAQO,EAAMpC,MAAM6B,OACpBE,QAASK,EAAMpC,MAAM+B,QACrBJ,MAAOS,EAAMC,KAAKV,MAClBC,OAAQQ,EAAMC,KAAKT,SAIM,SAAAU,GAC1B,MAAO,CACNZ,cAAe,SAACC,EAAOC,GAAR,OAAmBU,EAASC,IAAoBZ,EAAOC,OAIzDO,CAA6CK,YAAiBhB,EAAQiB","file":"static/js/3.922f3512.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__W-Npf\"};","import React from 'react';\r\n\r\nimport classes from './Order.css';\r\n\r\nconst order = (props) => {\r\n\tconst ingredients = [];\r\n\r\n\tfor (let ingredientName in props.ingredients) {\r\n\t\tingredients.push({\r\n\t\t\tname: ingredientName,\r\n\t\t\tamount: props.ingredients[ingredientName]\r\n\t\t});\r\n\t}\r\n\r\n\tconst ingredientOutput = ingredients.map(ig => {\r\n\t\treturn <span \r\n\t\t\tkey={ig.name}\r\n\t\t\tstyle={{\r\n\t\t\t\ttextTransform: 'capitalize',\r\n\t\t\t\tdisplay: 'inline-block',\r\n\t\t\t\tmargin: '0 8px',\r\n\t\t\t\tborder: '1px solid #ccc',\r\n\t\t\t\tpadding: '5px'\r\n\t\t\t}}>{ig.name} : ({ig.amount})</span>;\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className={classes.Order}>\r\n\t\t\t<p>Ingredients : {ingredientOutput}</p>\r\n\t\t\t<p>Price : <strong>USD {(+props.price).toFixed(2)}</strong></p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default order;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport axios from '../../axios-orders';\r\nimport Order from '../../components/Order/Order';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n\tcomponentDidMount () {\r\n\t\tthis.props.onFetchOrders(this.props.token, this.props.userId);\r\n\t}\r\n\r\n\trender () {\r\n\t\tlet orders = <Spinner />;\r\n\t\tif (!this.props.loading) {\r\n\t\t\torders = (\r\n\t\t\t\tthis.props.orders.map(order => (\r\n\t\t\t\t\t<Order \r\n\t\t\t\t\t\tkey={order.id}\r\n\t\t\t\t\t\tingredients={order.ingredients}\r\n\t\t\t\t\t\tprice={order.price} />\r\n\t\t\t\t))\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{orders}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\torders: state.order.orders,\r\n\t\tloading: state.order.loading,\r\n\t\ttoken: state.auth.token,\r\n\t\tuserId: state.auth.userId\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}